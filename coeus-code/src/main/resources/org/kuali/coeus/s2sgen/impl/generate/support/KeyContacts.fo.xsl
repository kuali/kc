<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2008 rel. 2 sp2 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:Key_Contacts="http://apply.grants.gov/forms/Key_Contacts-V1.0" xmlns:codes="http://apply.grants.gov/system/UniversalCodes-V2.0" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:globLib="http://apply.grants.gov/system/GlobalLibrary-V2.0" xmlns:xdt="http://www.w3.org/2005/xpath-datatypes" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fo="http://www.w3.org/1999/XSL/Format">
	<xsl:output version="1.0" method="xml" encoding="UTF-8" indent="no"/>
	<xsl:param name="SV_OutputFormat" select="'PDF'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:variable name="fo:layout-master-set">
		<fo:layout-master-set>
			<fo:simple-page-master master-name="default-page" page-height="11in" page-width="8.5in" margin-left="0.6in" margin-right="0.6in">
				<fo:region-body margin-top="0.79in" margin-bottom="0.79in"/>
			</fo:simple-page-master>
		</fo:layout-master-set>
	</xsl:variable>
	<xsl:template match="/">
		<fo:root>
			<xsl:copy-of select="$fo:layout-master-set"/>
			<fo:page-sequence master-reference="default-page" initial-page-number="1" format="1">
				<fo:flow flow-name="xsl-region-body">
					<fo:block>
						<xsl:for-each select="$XML">
							<fo:block/>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:block font-size="medium" font-weight="bold" margin="0pt">
								<fo:block>
									<fo:inline font-size="smaller" font-weight="bold">
										<xsl:text>EPA&#160;&#160;&#160; KEY CONTACTS FORM</xsl:text>
									</fo:inline>
								</fo:block>
							</fo:block>
							<fo:block text-align="center">
								<fo:leader leader-pattern="rule" rule-thickness="2" leader-length="100%"/>
							</fo:block>
							<fo:block/>
							<fo:inline font-size="smaller" font-weight="bold">
								<xsl:text>Authorized Representative</xsl:text>
							</fo:inline>
							<fo:inline font-size="smaller">
								<xsl:text>: </xsl:text>
							</fo:inline>
							<fo:inline font-size="smaller" font-style="italic">
								<xsl:text>Original awards and amendments will be sent to this individual for review and acceptance, unless otherwise indicated.</xsl:text>
							</fo:inline>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table table-layout="fixed" width="100%" border-spacing="2pt">
								<fo:table-column column-width="154"/>
								<fo:table-column column-width="proportional-column-width(1)"/>
								<fo:table-body start-indent="0pt">
									<fo:table-row>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<fo:inline font-size="smaller">
													<xsl:text>Name:</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<xsl:for-each select="Key_Contacts:Key_Contacts">
													<xsl:for-each select="Key_Contacts:RoleOnProject">
														<xsl:for-each select="Key_Contacts:ContactName">
															<xsl:if test="../Key_Contacts:ContactProjectRole = &quot;auth&quot;">
																<xsl:for-each select="globLib:FirstName">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-size="smaller">
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<xsl:for-each select="globLib:LastName">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<fo:inline font-size="smaller">
													<xsl:text>Title:</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<xsl:for-each select="Key_Contacts:Key_Contacts">
													<xsl:for-each select="Key_Contacts:RoleOnProject">
														<xsl:for-each select="Key_Contacts:ContactTitle">
															<xsl:if test="../Key_Contacts:ContactProjectRole = &quot;auth&quot;">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block text-decoration="underline">
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline text-decoration="underline">
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<fo:inline font-size="smaller">
													<xsl:text>Complete Address:</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<xsl:for-each select="Key_Contacts:Key_Contacts">
													<xsl:for-each select="Key_Contacts:RoleOnProject">
														<xsl:for-each select="Key_Contacts:ContactAddress">
															<xsl:if test="../Key_Contacts:ContactProjectRole = &quot;auth&quot;">
																<xsl:for-each select="globLib:Street1">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-size="smaller">
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<xsl:for-each select="globLib:Street2">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell padding="0" display-align="center">
											<fo:block/>
										</fo:table-cell>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<xsl:for-each select="Key_Contacts:Key_Contacts">
													<xsl:for-each select="Key_Contacts:RoleOnProject">
														<xsl:for-each select="Key_Contacts:ContactAddress">
															<xsl:if test="../Key_Contacts:ContactProjectRole = &quot;auth&quot;">
																<xsl:for-each select="globLib:City">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-size="smaller">
																	<xsl:text>,&#160; </xsl:text>
																</fo:inline>
																<xsl:for-each select="globLib:State">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-size="smaller">
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<xsl:for-each select="globLib:ZipPostalCode">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-size="smaller">
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<xsl:for-each select="globLib:Country">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell padding="0" height="23" display-align="center">
											<fo:block>
												<fo:inline font-size="smaller">
													<xsl:text>Phone Number:</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell padding="0" height="23" display-align="center">
											<fo:block>
												<xsl:for-each select="Key_Contacts:Key_Contacts">
													<xsl:for-each select="Key_Contacts:RoleOnProject">
														<xsl:for-each select="Key_Contacts:ContactPhone">
															<xsl:if test="../Key_Contacts:ContactProjectRole = &quot;auth&quot;">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block text-decoration="underline">
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline text-decoration="underline">
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
								</fo:table-body>
							</fo:table>
							<fo:block text-align="center">
								<fo:leader leader-pattern="rule" rule-thickness="2" leader-length="100%"/>
							</fo:block>
							<fo:block/>
							<fo:inline font-size="smaller" font-weight="bold">
								<xsl:text>Payee</xsl:text>
							</fo:inline>
							<fo:inline font-size="smaller">
								<xsl:text>: </xsl:text>
							</fo:inline>
							<fo:inline font-size="smaller" font-style="italic">
								<xsl:text>Individual authorized to accept payments.</xsl:text>
							</fo:inline>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table table-layout="fixed" width="100%" border-spacing="2pt">
								<fo:table-column column-width="157"/>
								<fo:table-column column-width="proportional-column-width(1)"/>
								<fo:table-body start-indent="0pt">
									<fo:table-row>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<fo:inline font-size="smaller">
													<xsl:text>Name:</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<xsl:for-each select="Key_Contacts:Key_Contacts">
													<xsl:for-each select="Key_Contacts:RoleOnProject">
														<xsl:for-each select="Key_Contacts:ContactName">
															<xsl:if test="../Key_Contacts:ContactProjectRole =&quot;payee&quot;">
																<xsl:for-each select="globLib:FirstName">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-size="smaller">
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<xsl:for-each select="globLib:LastName">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<fo:inline font-size="smaller">
													<xsl:text>Title:</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<xsl:for-each select="Key_Contacts:Key_Contacts">
													<xsl:for-each select="Key_Contacts:RoleOnProject">
														<xsl:for-each select="Key_Contacts:ContactTitle">
															<xsl:if test="../Key_Contacts:ContactProjectRole = &quot;payee&quot;">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block text-decoration="underline">
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline text-decoration="underline">
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell padding="0" height="22" display-align="center">
											<fo:block>
												<fo:inline font-size="smaller">
													<xsl:text>Mail Address:</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<xsl:for-each select="Key_Contacts:Key_Contacts">
													<xsl:for-each select="Key_Contacts:RoleOnProject">
														<xsl:for-each select="Key_Contacts:ContactAddress">
															<xsl:if test="../Key_Contacts:ContactProjectRole = &quot;payee&quot;">
																<xsl:for-each select="globLib:Street1">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-size="smaller">
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<xsl:for-each select="globLib:Street2">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell padding="0" display-align="center">
											<fo:block/>
										</fo:table-cell>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<xsl:for-each select="Key_Contacts:Key_Contacts">
													<xsl:for-each select="Key_Contacts:RoleOnProject">
														<xsl:for-each select="Key_Contacts:ContactAddress">
															<xsl:if test="../Key_Contacts:ContactProjectRole = &quot;payee&quot;">
																<xsl:for-each select="globLib:City">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-size="smaller">
																	<xsl:text>,&#160; </xsl:text>
																</fo:inline>
																<xsl:for-each select="globLib:State">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-size="smaller">
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<xsl:for-each select="globLib:ZipPostalCode">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-size="smaller">
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<xsl:for-each select="globLib:Country">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<fo:inline font-size="smaller">
													<xsl:text>Phone Number:</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell padding="0" height="23" display-align="center">
											<fo:block>
												<xsl:for-each select="Key_Contacts:Key_Contacts">
													<xsl:for-each select="Key_Contacts:RoleOnProject">
														<xsl:for-each select="Key_Contacts:ContactPhone">
															<xsl:if test="../Key_Contacts:ContactProjectRole = &quot;payee&quot;">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block text-decoration="underline">
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline text-decoration="underline">
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
								</fo:table-body>
							</fo:table>
							<fo:block text-align="center">
								<fo:leader leader-pattern="rule" rule-thickness="2" leader-length="100%"/>
							</fo:block>
							<fo:block/>
							<fo:inline font-size="smaller" font-weight="bold">
								<xsl:text>Administrative Contact: </xsl:text>
							</fo:inline>
							<fo:inline font-size="smaller" font-style="italic">
								<xsl:text>Individual from Sponsored Program Office to contact concerning administrative matters (i.e. indirect cost rate compuation, rebudgeting requests etc.)</xsl:text>
							</fo:inline>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table table-layout="fixed" width="100%" border-spacing="2pt">
								<fo:table-column column-width="157"/>
								<fo:table-column column-width="proportional-column-width(1)"/>
								<fo:table-body start-indent="0pt">
									<fo:table-row>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<fo:inline font-size="smaller">
													<xsl:text>Name:</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<xsl:for-each select="Key_Contacts:Key_Contacts">
													<xsl:for-each select="Key_Contacts:RoleOnProject">
														<xsl:for-each select="Key_Contacts:ContactName">
															<xsl:if test="../Key_Contacts:ContactProjectRole = &quot;admin&quot;">
																<xsl:for-each select="globLib:FirstName">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline>
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<xsl:for-each select="globLib:LastName">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<fo:inline font-size="smaller">
													<xsl:text>Title:</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<xsl:for-each select="Key_Contacts:Key_Contacts">
													<xsl:for-each select="Key_Contacts:RoleOnProject">
														<xsl:for-each select="Key_Contacts:ContactTitle">
															<xsl:if test="../Key_Contacts:ContactProjectRole = &quot;admin&quot;">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block text-decoration="underline">
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline text-decoration="underline">
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<fo:inline font-size="smaller">
													<xsl:text>Mailing Address:</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<xsl:for-each select="Key_Contacts:Key_Contacts">
													<xsl:for-each select="Key_Contacts:RoleOnProject">
														<xsl:for-each select="Key_Contacts:ContactAddress">
															<xsl:if test="../Key_Contacts:ContactProjectRole = &quot;admin&quot;">
																<xsl:for-each select="globLib:Street1">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-size="smaller">
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<xsl:for-each select="globLib:Street2">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell padding="0" display-align="center">
											<fo:block/>
										</fo:table-cell>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<xsl:for-each select="Key_Contacts:Key_Contacts">
													<xsl:for-each select="Key_Contacts:RoleOnProject">
														<xsl:for-each select="Key_Contacts:ContactAddress">
															<xsl:if test="../Key_Contacts:ContactProjectRole = &quot;admin&quot;">
																<xsl:for-each select="globLib:City">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-size="smaller">
																	<xsl:text>,&#160; </xsl:text>
																</fo:inline>
																<xsl:for-each select="globLib:State">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-size="smaller">
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<xsl:for-each select="globLib:ZipPostalCode">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-size="smaller">
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<xsl:for-each select="globLib:Country">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<fo:inline font-size="smaller">
													<xsl:text>Phone Number:</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell padding="0" height="23" display-align="center">
											<fo:block>
												<xsl:for-each select="Key_Contacts:Key_Contacts">
													<xsl:for-each select="Key_Contacts:RoleOnProject">
														<xsl:for-each select="Key_Contacts:ContactPhone">
															<xsl:if test="../Key_Contacts:ContactProjectRole = &quot;admin&quot;">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block text-decoration="underline">
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline text-decoration="underline">
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<fo:inline font-size="smaller">
													<xsl:text>FAX Number:</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<xsl:for-each select="Key_Contacts:Key_Contacts">
													<xsl:for-each select="Key_Contacts:RoleOnProject">
														<xsl:for-each select="Key_Contacts:ContactFax">
															<xsl:if test="../Key_Contacts:ContactProjectRole =&quot;admin&quot;">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block text-decoration="underline">
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline text-decoration="underline">
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<fo:inline font-size="smaller">
													<xsl:text>E-Mail Address:</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<xsl:for-each select="Key_Contacts:Key_Contacts">
													<xsl:for-each select="Key_Contacts:RoleOnProject">
														<xsl:for-each select="Key_Contacts:ContactEmail">
															<xsl:if test="../Key_Contacts:ContactProjectRole = &quot;admin&quot;">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block text-decoration="underline">
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline text-decoration="underline">
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
								</fo:table-body>
							</fo:table>
							<fo:block text-align="center">
								<fo:leader leader-pattern="rule" rule-thickness="2" leader-length="100%"/>
							</fo:block>
							<fo:block/>
							<fo:inline font-size="smaller" font-weight="bold">
								<xsl:text>Principal Investigator</xsl:text>
							</fo:inline>
							<fo:inline font-size="smaller">
								<xsl:text>: </xsl:text>
							</fo:inline>
							<fo:inline font-size="smaller" font-style="italic">
								<xsl:text>Individual responsible for the technical completion of the proposed work.</xsl:text>
							</fo:inline>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table table-layout="fixed" width="100%" border-spacing="2pt">
								<fo:table-column column-width="157"/>
								<fo:table-column column-width="proportional-column-width(1)"/>
								<fo:table-body start-indent="0pt">
									<fo:table-row>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<fo:inline font-size="smaller">
													<xsl:text>Name:</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<xsl:for-each select="Key_Contacts:Key_Contacts">
													<xsl:for-each select="Key_Contacts:RoleOnProject">
														<xsl:for-each select="Key_Contacts:ContactName">
															<xsl:if test="../Key_Contacts:ContactProjectRole = &quot;pi&quot;">
																<xsl:for-each select="globLib:FirstName">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline>
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<xsl:for-each select="globLib:LastName">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<fo:inline font-size="smaller">
													<xsl:text>Title:</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<xsl:for-each select="Key_Contacts:Key_Contacts">
													<xsl:for-each select="Key_Contacts:RoleOnProject">
														<xsl:for-each select="Key_Contacts:ContactTitle">
															<xsl:if test="../Key_Contacts:ContactProjectRole = &quot;pi&quot;">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block text-decoration="underline">
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline text-decoration="underline">
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<fo:inline font-size="smaller">
													<xsl:text>Mailing Address:</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<xsl:for-each select="Key_Contacts:Key_Contacts">
													<xsl:for-each select="Key_Contacts:RoleOnProject">
														<xsl:for-each select="Key_Contacts:ContactAddress">
															<xsl:if test="../Key_Contacts:ContactProjectRole = &quot;pi&quot;">
																<xsl:for-each select="globLib:Street1">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-size="smaller">
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<xsl:for-each select="globLib:Street2">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell padding="0" display-align="center">
											<fo:block/>
										</fo:table-cell>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<xsl:for-each select="Key_Contacts:Key_Contacts">
													<xsl:for-each select="Key_Contacts:RoleOnProject">
														<xsl:for-each select="Key_Contacts:ContactAddress">
															<xsl:if test="../Key_Contacts:ContactProjectRole = &quot;pi&quot;">
																<xsl:for-each select="globLib:City">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-size="smaller">
																	<xsl:text>,&#160; </xsl:text>
																</fo:inline>
																<xsl:for-each select="globLib:State">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-size="smaller">
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<xsl:for-each select="globLib:ZipPostalCode">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-size="smaller">
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<xsl:for-each select="globLib:Country">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline text-decoration="underline">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<fo:inline font-size="smaller">
													<xsl:text>Phone Number:</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell padding="0" height="23" display-align="center">
											<fo:block>
												<xsl:for-each select="Key_Contacts:Key_Contacts">
													<xsl:for-each select="Key_Contacts:RoleOnProject">
														<xsl:for-each select="Key_Contacts:ContactPhone">
															<xsl:if test="../Key_Contacts:ContactProjectRole = &quot;pi&quot;">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block text-decoration="underline">
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline text-decoration="underline">
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell padding="0" height="21" display-align="center">
											<fo:block>
												<fo:inline font-size="smaller">
													<xsl:text>FAX Number:</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>										
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<xsl:for-each select="Key_Contacts:Key_Contacts">
													<xsl:for-each select="Key_Contacts:RoleOnProject">
														<xsl:for-each select="Key_Contacts:ContactFax">
															<xsl:if test="../Key_Contacts:ContactProjectRole =&quot;pi&quot;">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block text-decoration="underline">
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline text-decoration="underline">
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<fo:inline font-size="smaller">
													<xsl:text>E-Mail Address:</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<xsl:for-each select="Key_Contacts:Key_Contacts">
													<xsl:for-each select="Key_Contacts:RoleOnProject">
														<xsl:for-each select="Key_Contacts:ContactEmail">
															<xsl:if test="../Key_Contacts:ContactProjectRole =&quot;pi&quot;">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block text-decoration="underline">
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline text-decoration="underline">
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<fo:inline font-size="smaller">
													<xsl:text>Web URL:</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell padding="0" display-align="center">
											<fo:block/>
										</fo:table-cell>
									</fo:table-row>
								</fo:table-body>
							</fo:table>
						</xsl:for-each>
					</fo:block>
					<fo:block id="SV_RefID_PageTotal"/>
				</fo:flow>
			</fo:page-sequence>
		</fo:root>
	</xsl:template>
	<xsl:template name="double-backslash">
		<xsl:param name="text"/>
		<xsl:param name="text-length"/>
		<xsl:variable name="text-after-bs" select="substring-after($text, '\')"/>
		<xsl:variable name="text-after-bs-length" select="string-length($text-after-bs)"/>
		<xsl:choose>
			<xsl:when test="$text-after-bs-length = 0">
				<xsl:choose>
					<xsl:when test="substring($text, $text-length) = '\'">
						<xsl:value-of select="concat(substring($text,1,$text-length - 1), '\\')"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$text"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="concat(substring($text,1,$text-length - $text-after-bs-length - 1), '\\')"/>
				<xsl:call-template name="double-backslash">
					<xsl:with-param name="text" select="$text-after-bs"/>
					<xsl:with-param name="text-length" select="$text-after-bs-length"/>
				</xsl:call-template>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
</xsl:stylesheet>
