<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2005-2013 The Kuali Foundation

    Licensed under the Educational Community License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.opensource.org/licenses/ecl2.php

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd


                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:annotation-config />

    <!-- this spring file is meant to be imported into other modules as needed -->

    <bean id="grlImporter" abstract="true" class="org.kuali.rice.core.framework.resourceloader.GlobalResourceLoaderServiceFactoryBean" p:singleton="true" p:mustExist="true" />

    <bean id="kualiModuleService" parent="grlImporter" p:serviceName="kualiModuleService" />
    <bean id="transactionManager" parent="grlImporter" p:serviceName="transactionManager" />

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="controllerTransaction"
                      expression="execution(* org.kuali.rice.krad.web.controller.UifControllerBase+.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="controllerTransaction"/>
    </aop:config>

    <bean class="org.kuali.rice.krad.uif.freemarker.FreeMarkerInlineRenderBootstrap" />

    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="preferFileSystemAccess" value="false" />
        <property name="templateLoaderPath" value="/"/>
        <property name="freemarkerSettings">
            <props>
                <prop key="number_format">computer</prop>
                <prop key="template_update_delay">2147483647</prop>
            </props>
        </property>
    </bean>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="cache" value="true"/>
        <property name="prefix" value=""/>
        <property name="suffix" value=".ftl"/>
    </bean>

    <bean id="handlerMapping" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
        <property name="interceptors">
            <list>
                <ref bean="uifControllerHandlerInterceptor"/>
                <ref bean="moduleLockingHandlerInterceptor"/>
            </list>
        </property>
    </bean>

    <bean id="uifControllerHandlerInterceptor"
          class="org.kuali.rice.krad.web.controller.UifControllerHandlerInterceptor"/>

    <bean id="moduleLockingHandlerInterceptor" class="org.kuali.rice.krad.web.controller.ModuleLockingHandlerInterceptor">
        <property name="moduleLockedMapping" value="module-locked"/>
        <property name="kualiModuleService" ref="kualiModuleService"/>
    </bean>

    <bean class="org.kuali.coeus.sys.framework.controller.interceptor.KcUifHandlerExceptionResolver">
        <property name="innerHandler">
            <bean class="org.kuali.rice.krad.web.controller.UifHandlerExceptionResolver"/>
        </property>
    </bean>

    <bean class="org.kuali.rice.krad.web.controller.UifRequestMappingHandlerAdapter">
        <property name="webBindingInitializer" ref="kradConfigurableWebBindingInitializer" />
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter"/>
            </list>
        </property>
    </bean>

    <bean id="kradConfigurableWebBindingInitializer"
          class="org.kuali.rice.krad.web.bind.UifConfigurableWebBindingInitializer"/>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="500000"/>
    </bean>

    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>org/kuali/rice/krad/ApplicationResources</value>
                <value>org/kuali/rice/krad/KRADApplicationResources</value>
            </list>
        </property>
    </bean>

</beans>
